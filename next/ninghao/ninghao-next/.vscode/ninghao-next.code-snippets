{
  "API handler": {
    "prefix": "ah",
    "body": [
      "import { NextApiRequest, NextApiResponse } from 'next';",
      "",
      "const handler = async (request: NextApiRequest, response: NextApiResponse) => {",
      "  if (request.method !== '${1:GET}') {",
      "    return response.status(400).send('无效请求😬');",
      "  }",
      "",
      "  ${2}",
      "",
      "  return response.json({ message: true });",
      "};",
      "",
      "export default handler;"
    ]
  },
  "Destructuring assignment": {
    "prefix": "ds",
    "body": ["const {${2}} = ${1};", ""]
  },
  "useContext": {
    "prefix": "uc",
    "body": ["const ${2} = ${3:useContext}(${1})", ""]
  },
  "useState": {
    "prefix": "us",
    "body": ["const [${1}] = ${3:useState}(${2})", ""]
  },
  "Document title": {
    "prefix": "dt",
    "body": [
      "/**",
      " * 页面标题",
      " */",
      "useEffect(() => {",
      "  document.title = '${1}';",
      "});",
      ""
    ]
  },
  "Import react": {
    "prefix": "ir",
    "body": ["import {${1}} from 'react';"]
  },
  "React function component with props": {
    "prefix": "rfcp",
    "body": [
      "/**",
      " * 属性类型",
      " */",
      "type ${1:ComponentName}Props = {};",
      "",
      "/**",
      " * ${1:ComponentName}",
      " */",
      "const ${1:ComponentName} = (props: ${1:ComponentName}Props) => {",
      "  /**",
      "   * 视图",
      "   */",
      "  return <div>${1:ComponentName}</div>",
      "}",
      "",
      "/**",
      " * 导出 ${1:ComponentName}",
      " */",
      "export default ${1:ComponentName};",
      ""
    ]
  },
  "React function component": {
    "prefix": "rfc",
    "body": [
      "/**",
      " * ${1:ComponentName}",
      " */",
      "const ${1:ComponentName} = () => {",
      "  /**",
      "   * 视图",
      "   */",
      "  return <div>${1:ComponentName}</div>",
      "}",
      "",
      "/**",
      " * 导出 ${1:ComponentName}",
      " */",
      "export default ${1:ComponentName};",
      ""
    ]
  },
  "React class component": {
    "prefix": "rc",
    "body": [
      "import { Component } from 'react';",
      "",
      "/**",
      " * 属性类型",
      " */",
      "type ${1:ComponentName}Props = {};",
      "",
      "/**",
      " * 状态类型",
      " */",
      "type ${1:ComponentName}State = {};",
      "",
      "/**",
      " * ${1:ComponentName}",
      " */",
      "class ${1:ComponentName} extends Component<${1:ComponentName}Props, ${1:ComponentName}State> {",
      "  /**",
      "   * 默认属性",
      "   */",
      "  static defaultProps = {};",
      "",
      "  /**",
      "   * 状态",
      "   */",
      "  state: ${1:ComponentName}State = {};",
      "",
      "  /**",
      "   * 视图",
      "   */",
      "  render() {",
      "    return <div>${1:ComponentName}</div>;",
      "  }",
      "}",
      "",
      "/**",
      " * 导出 ${1:ComponentName}",
      " */",
      "export default ${1:ComponentName};",
      ""
    ]
  },
  "React class component with constructor": {
    "prefix": "rcc",
    "body": [
      "import { Component } from 'react';",
      "",
      "/**",
      " * 属性类型",
      " */",
      "type ${1:ComponentName}Props = {};",
      "",
      "/**",
      " * 状态类型",
      " */",
      "type ${1:ComponentName}State = {};",
      "",
      "/**",
      " * 组件",
      " */",
      "class ${1:ComponentName} extends Component<${1:ComponentName}Props, ${1:ComponentName}State> {",
      "  /**",
      "   * 构造方法",
      "   */",
      "  constructor(props: ${1:ComponentName}Props) {",
      "    super(props);",
      "  }",
      "  ",
      "  /**",
      "   * 默认属性",
      "   */",
      "  static defaultProps = {};",
      "",
      "  /**",
      "   * 状态",
      "   */",
      "  state: ${1:ComponentName}State = {};",
      "",
      "  /**",
      "   * 视图",
      "   */",
      "  render() {",
      "    return <div>${1:ComponentName}</div>;",
      "  }",
      "}",
      "",
      "/**",
      " * 导出 ${1:ComponentName}",
      " */",
      "export default ${1:ComponentName};",
      ""
    ]
  }
}
